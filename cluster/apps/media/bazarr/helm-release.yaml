---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app bazarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      version: 10.5.2
      chart: bazarr
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    global:
      nameOverride: *app
    image:
      repository: ghcr.io/k8s-at-home/bazarr
      tag: v1.1.0
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-staging"
          hajimari.io/enable: "true"
          hajimari.io/icon: "subtitles"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
    persistence:
      config:
        enabled: true
        existingClaim: bazarr-config-v1
      movies:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: 192.168.1.208
            path: /mnt/user/Media/movies
        mountPath: /mnt/movies
        readOnly: false
      movies-4k:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: 192.168.1.7
            path: /mnt/user/Media/movies-4k
        mountPath: /mnt/movies-4k
        readOnly: false
      tv:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: 192.168.1.7
            path: /mnt/user/Media/tv
        mountPath: /mnt/tv
        readOnly: false
      tv-4k:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: 192.168.1.7
            path: /mnt/user/Media/tv-4k
        mountPath: /mnt/tv-4k
        readOnly: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 250Mi
